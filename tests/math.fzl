#
# fuzuli : A general purpose interpreter
# Copyright (C) 2012 Mehmet Hakan Satman <mhsatman@yahoo.com>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.



(require "/usr/lib/fuzuli/nfl/math.nfl")
(require "/usr/lib/fuzuli/nfl/types.nfl")

(let a (/ (* PI 3) 2.0))  # a=3*PI/2
(let b (cos a))     # b=cos(a)


(if (= b "1.01962e-06") (print "PASSED!\n") (print "ERROR\n"))





(let a (/ PI 2.0))  # a=PI/2
(let b (sin a))     # b=sin(a)


(if (= b 1) (print "PASSED!\n") (print "ERROR\n"))



# Exp
(let b (exp 1.0))     # b=exp(1.0)
(if (= b 2.71828) (print "PASSED!\n") (print "ERROR\n"))


# Abs
(let a -11.9)
(let b (abs a))
(if (= b 11.9) (print "PASSED!\n") (print "ERROR\n"))
(if (= (abs -3) 3) (print "PASSED!\n") (print "ERROR\n"))

# Atan2
(let val (atan2 1 1))
(if (= val 0.7853981634)
	(print "PASSED!\n")
	(print "ERROR\n")
)


# isinf
(let val (pow 10 10000))
(if (= (isinf val) 1)
    (print "PASSED!\n")
    (print "ERROR\n")
)
(let val (pow 10 1))
(if (= (isinf val) 0)
    (print "PASSED!\n")
    (print "ERROR\n")
)
(let val (pow -10 100001))
(if (= (isinf val) 1)
    (print "PASSED!\n")
    (print "ERROR\n")
)

